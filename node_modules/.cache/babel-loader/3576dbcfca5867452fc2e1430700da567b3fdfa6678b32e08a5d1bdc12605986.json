{"ast":null,"code":"var _jsxFileName = \"/home/yamato/Documents/projects/React/appointment_planner/appointment-planner-starting-v18/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contacts, setContacts] = useState([{\n    name: \"Jake Paul\",\n    email: \"kukcac@kukac.com\",\n    phone: 123455677655\n  }, {\n    name: \"Logan Paul\",\n    email: \"kaki@kaki.com\",\n    phone: 12345423445\n  }]);\n  const [appontments, setAppointments] = useState([]);\n\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  const addContacts = new_contact => {\n    setContacts(prev => prev.concat(new_contact));\n  };\n  const addAppointments = appointment => {\n    setAppointments(prev => [appointment, ...prev]);\n  };\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        addContacts: addContacts,\n        contacts: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 47\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        addAppointments: addAppointments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 51\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4lkrEHSZWxCyjWRCHSiUf5wzDtA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","name","email","phone","appontments","setAppointments","addContacts","new_contact","prev","concat","addAppointments","appointment","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["/home/yamato/Documents/projects/React/appointment_planner/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [contacts, setContacts] = useState([{name: \"Jake Paul\", email: \"kukcac@kukac.com\", phone: 123455677655}, \r\n  {name: \"Logan Paul\", email: \"kaki@kaki.com\", phone: 12345423445}]);\r\n  const [appontments, setAppointments] = useState([]);\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const addContacts = (new_contact) => {\r\n    setContacts((prev) => prev.concat(new_contact))\r\n  };\r\n\r\n const addAppointments = (appointment) => {\r\n  setAppointments((prev) => [appointment, ...prev])\r\n }\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage addContacts={addContacts} contacts={contacts}/> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage addAppointments={addAppointments}/> /* Add props to AppointmentsPage */ }/>\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}